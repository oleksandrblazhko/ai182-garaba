## Тестування для обходу робочих потоків
|ID|
|----|
|WSTG-BUSL-06|

### Резюме
Уразливості робочого процесу передбачають будь-який тип уразливості, який дозволяє зловмиснику неправильно використовувати програму/систему таким чином, щоб він міг обійти (не слідувати) розробленому/передбаченому робочому процесу.

Визначення робочого процесу у Вікіпедії:

Робочий процес складається з послідовності пов’язаних кроків, де кожен крок слідує без затримки чи перерви та завершується безпосередньо перед початком наступного. Це зображення послідовності операцій, оголошених як робота людини чи групи, організації персоналу або одного чи кількох простих чи складних механізмів. Робочий процес можна розглядати як будь-яку абстракцію реальної роботи.

Бізнес-логіка програми має вимагати, щоб користувач виконав певні кроки в правильному/конкретному порядку, і якщо робочий процес завершується без належного завершення, усі дії та породжені дії «відкочуються» або скасовуються. Уразливості, пов’язані з обходом робочих процесів або обходом правильного робочого процесу бізнес-логіки, унікальні тим, що вони дуже стосуються конкретної програми/системи, тому випадки неправильного використання вручну необхідно ретельно розробляти з використанням вимог і варіантів використання.

Бізнес-процес додатків повинен мати перевірки, щоб переконатися, що транзакції/дії користувача виконуються в правильному/прийнятному порядку, і якщо транзакція ініціює певну дію, ця дія буде «відкочена» та видалена, якщо транзакція не буде успішно завершена .

### Приклад 1
Багато хто з нас отримує такого типу «клубні/бали лояльності» за покупки в продуктових магазинах і на заправках. Припустімо, що користувач зміг розпочати транзакцію, пов’язану зі своїм обліковим записом, а потім після того, як бали були додані до його клубного/облікового запису лояльності, скасував транзакцію або вилучив товари зі свого «кошика» та зробив тендер. У цьому випадку система або не повинна нараховувати бали/кредити до облікового запису, доки його не буде запропоновано, або бали/кредити має бути «відкочено», якщо приріст балів/кредитів не відповідає остаточному тендеру. Пам’ятаючи про це, зловмисник може розпочинати транзакції та скасовувати їх, щоб наростити рівень очок, фактично нічого не купуючи.

### Приклад 2
Електронна система дошки оголошень може бути розроблена для того, щоб переконатися, що початкові публікації не містять ненормативної лексики на основі списку, з яким порівнюється публікація. Якщо у введеному користувачем тексті знайдено слово зі списку заборони, подання не публікується. Але після опублікування подання заявник може переглядати, редагувати та змінювати вміст подання, щоб включити слова, включені до списку ненормативної лексики/відмов, оскільки під час редагування публікація більше ніколи не порівнюється. Пам’ятаючи про це, зловмисники можуть відкрити початкове порожнє або мінімальне обговорення, а потім додати все, що завгодно, як оновлення.

### Цілі тесту
Перегляньте проектну документацію, щоб знайти способи пропуску або проходження кроків у процесі подання заявки в порядку, відмінному від передбаченого потоку бізнес-логіки.
Розробіть випадок неправильного використання та спробуйте обійти кожен виявлений логічний потік.

### Як тестувати
#### Спосіб тестування 1
Розпочніть транзакцію, яка проходить через програму за балами, що запускає кредити/бали на обліковий запис користувача.
Скасуйте угоду або скоротіть остаточний тендер таким чином, щоб значення балів було зменшено, і перевірте систему балів/кредитів, щоб переконатися, що належні бали/кредити були записані.
#### Спосіб тестування 2
У системі керування вмістом або на дошках оголошень введіть і збережіть дійсний початковий текст або значення.
Потім спробуйте додати, відредагувати та видалити дані, які залишать наявні дані в недійсному стані або з недійсними значеннями, щоб гарантувати, що користувачеві заборонено зберігати неправильну інформацію. Деякі «недійсні» дані чи інформація можуть бути конкретними словами (нецензурна лексика) або конкретними темами (наприклад, політичні питання).

### Пов’язані тестові випадки
- Тестування проходження каталогу/включення файлів
- Тестування на обхід схеми авторизації
- Тестування на обхід схеми керування сеансами
- Перевірте перевірку даних бізнес-логіки
- Перевірте здатність підробляти запити
- Перевірка цілісності тесту
- Тест на час процесу
- Перевірте обмеження кількості разів, коли функція може бути використана
- Перевірте захист від неправильного використання програми
- Тестове завантаження файлів неочікуваних типів
- Тестове завантаження шкідливих файлів

### Санація
Програма має бути самосвідомою та мати перевірки, які гарантують, що користувачі виконують кожен крок у процесі робочого процесу в правильному порядку та запобігають зловмисникам від обходу/пропуску/або повторення будь-яких кроків/процесів у робочому процесі. Перевірка на вразливості робочого процесу передбачає розробку випадків зловживання/неправильного використання бізнес-логіки з метою успішного завершення бізнес-процесу, не виконуючи правильні кроки в правильному порядку.
